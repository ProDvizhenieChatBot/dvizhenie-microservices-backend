[project]
name = "bot-service"
version = "0.1.0"
description = "Telegram Bot Service for Charity MVP"
authors = [{ name = "Hackathon Team 11" }]
requires-python = "==3.12.*"
dependencies = [
    "aiogram==3.5.0",
    "pydantic-settings==2.2.1",
    "httpx==0.27.0",
]

[project.optional-dependencies]
dev = [
    "ruff==0.13.1",
    "pyright==1.1.405",
    "pytest==8.2.2",
    "pytest-asyncio==0.23.7",
    "pytest-cov==5.0.0",
    "pytest-mock==3.12.0",
    "pytest-dotenv==0.5.2",
]

[tool.ruff]
line-length = 100
target-version = "py312"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
select = [
    "E",
    "W",
    "F",
    "I",
    "C",
    "B",
    "UP",
    "N",
    "RUF",
    "PT",
    "SIM",
    "TID",
]
ignore = [
    "RUF001",
]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["app"]
combine-as-imports = true
lines-after-imports = 2

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pyright]
reportCallIssue = false

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["src/tests"]
asyncio_mode = "auto"
addopts = [
    "--verbose",
    "--strict-markers",
    "--tb=short",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-branch",
]
filterwarnings = [
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["app"]
branch = true
omit = [
    "src/app/main.py",
]