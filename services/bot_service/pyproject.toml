# services/bot_service/pyproject.toml
[project]
name = "bot-service"
version = "0.1.0"
description = "Telegram Bot Service for Charity MVP"
authors = [{ name = "Hackathon Team 11" }]
requires-python = "==3.12.*"
dependencies = [
    "aiogram==3.5.0",
    "pydantic-settings==2.2.1",
    "httpx==0.27.0",
]

[project.optional-dependencies]
dev = [
    "ruff==0.13.1",
    "pyright==1.1.405",
]

[tool.ruff]
line-length = 100
target-version = "py312"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "RUF",  # ruff-specific rules
    "PT",   # pytest
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
]
ignore = [
    "RUF001",  # String contains ambiguous unicode character
]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["app"]
combine-as-imports = true
lines-after-imports = 2

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"