# openapi.yaml
openapi: 3.0.3
info:
  title: API ��� ������������������ ����� "�������� �����"
  description: |-
    �������������� API ��� ��������� ������ ����������.
    ������������� ��������� ��� ���������� ��������, ��������, ������� � �����������������.
  version: 3.0.0

servers:
  - url: http://localhost:8000/api/v1
    description: ��������� ������ ��� ���������� (���� ����� Nginx Gateway)

tags:
  - name: Sessions
    description: �������� � ������������� ������ ��� ������������� (Telegram Bot, Web).
  - name: Application Filling (Public)
    description: ��������� ��� ������������� (Mini App) ��� ���������� � �������� ������.
  - name: Admin - Applications
    description: ��������� ��� ����������� ����� ��� ���������� ��������. ������� Basic Auth.
  - name: Admin - Forms
    description: ��������� ��� ��������������� ��� ���������� ������� �����.
  - name: Forms
    description: ��������� ���� ����� ��� ������������ ���������.
  - name: Files
    description: �������� ������ � ��������� ������ �� ����������.
  - name: Health Checks
    description: �������� ��������� ��������.

paths:
  # --- Sessions ---
  /sessions/telegram:
    post:
      tags:
        - Sessions
      summary: ������� ��� ����������� ������ ��� Telegram-����
      description: |-
        ���������� `bot-service` ��� ������ ������� � �������������.
        ���� ������������� ������ �� `telegram_id`. ���� �� �������, ������� �����.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TelegramSessionRequest"
      responses:
        "200":
          description: ������ ������� ������� ��� �������.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionResponse"
  /sessions/web:
    post:
      tags:
        - Sessions
      summary: ������� ������ ��� ���-�������
      description: |-
        ������� ����� ��������� ������ (��� `telegram_id`) ��� ������������,
        ���������� � �����, � ���������� �� UUID.
      responses:
        "200":
          description: ������ ������� �������.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionResponse"
  /sessions/telegram/status:
    get:
      tags:
        - Sessions
      summary: �������� ������ ��������� ������ �� Telegram ID
      description: ���������� ������ ����� ��������� ������ ��� ���������� ������������ Telegram.
      parameters:
        - name: telegram_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: �������� �����.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationStatusResponse"

  # --- Application Filling (Public) ---
  /applications/{application_uuid}/public:
    get:
      tags:
        - Application Filling (Public)
      summary: �������� ������ ����� ������� ������
      description: Mini App ���������� ���� �������� ��� ��������� ������ ������ � ����������� ����������.
      parameters:
        - name: application_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: ������ ������.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationPublic"
    patch:
      tags:
        - Application Filling (Public)
      summary: ��������� �������� ���������� ������
      description: Mini App ������������ ���������� ����������� ������ (`data` JSON) ��� ���������� �� �������.
      parameters:
        - name: application_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationUpdate"
      responses:
        "200":
          description: ������ ������� ���������.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationPublic"
  /applications/{application_uuid}/public/status:
    get:
      tags:
        - Application Filling (Public)
      summary: �������� ������ ����� ������ �� UUID
      description: Public-�������� ��� �������� ������� ������ �� �� UUID (��������, ��� ���-�������).
      parameters:
        - name: application_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: �������� �����.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationStatusResponse"
  /applications/{application_uuid}/submit:
    post:
      tags:
        - Application Filling (Public)
      summary: ��������� ����������� ������ �� ������������
      description: ��������� ��� ��� ������������. ������ ������ ������ � `draft` �� `new`.
      parameters:
        - name: application_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: ������ ������� ����������.
  /applications/{application_uuid}/files:
    post:
      tags:
        - Application Filling (Public)
      summary: ��������� ����������� ���� � ������
      description: ����� �������� �������� �����, Mini App �������� ���� ��������, ����� ������� ����� ����� ������� � ������.
      parameters:
        - name: application_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FileLinkRequest"
      responses:
        "201":
          description: ���� ������� �������� � ������.

  # --- Admin: Applications ---
  /admin/applications:
    get:
      tags:
        - Admin - Applications
      summary: (�����) �������� ������ ���� ������
      security:
        - AdminBasicAuth: []
      parameters:
        - name: status
          in: query
          schema:
            $ref: "#/components/schemas/ApplicationStatus"
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
      responses:
        "200":
          description: ������ ������.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApplicationAdmin"
  /admin/applications/export:
    get:
      tags:
        - Admin - Applications
      summary: (�����) �������������� ������ � XLSX
      security:
        - AdminBasicAuth: []
      description: ��������� ��� ������ � ���� XLSX �����.
      responses:
        "200":
          description: XLSX ���� ��� ����������.
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              {}
  /admin/applications/{application_uuid}:
    get:
      tags:
        - Admin - Applications
      summary: (�����) �������� ��������� ���������� �� ������
      security:
        - AdminBasicAuth: []
      parameters:
        - name: application_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: ������ ������.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationAdmin"
    patch:
      tags:
        - Admin - Applications
      summary: (�����) �������� ������ ��� ����������� ������
      security:
        - AdminBasicAuth: []
      parameters:
        - name: application_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationAdminUpdate"
      responses:
        "200":
          description: ������/����������� ��������.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationAdmin"
  /admin/applications/{application_uuid}/download-documents:
    get:
      tags:
        - Admin - Applications
      summary: (�����) ������� ��� ��������� ������ ZIP-�������
      security:
        - AdminBasicAuth: []
      description: �������� ��� ����� ������ � ������ �� ����� ZIP-�������.
      parameters:
        - name: application_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: ZIP-����� � �����������.
          content:
            application/zip: {}

  # --- Forms ---
  /forms/schema/active:
    get:
      tags:
        - Forms
      summary: �������� �������� ����� ������
      description: ���������� ���������� JSON-����� ��� ������������ ��������� ������ � Mini App.
      responses:
        "200":
          description: �������� ����� �� ������ ������.
          content:
            application/json:
              schema:
                type: object
  /admin/forms/schema:
    post:
      tags:
        - Admin - Forms
      summary: (�����) ��������� ����� ����� ������
      security:
        - AdminBasicAuth: []
      description: ��������� ����� ������ JSON-����� � ������ �� ��������.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FormSchemaUpload"
      responses:
        "201":
          description: ����� ������� ��������� � ������������.

  # --- Files ---
  /files/upload:
    post:
      tags:
        - Files
      summary: ��������� ����
      description: ��������� ���� � ��������� ��� � S3-��������� (MinIO). ���������� ���������� ID �����.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "201":
          description: ���� ������� ��������.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileUploadResponse"
  /files/{file_id}/download-link:
    get:
      tags:
        - Files
      summary: (�����) �������� ��������� ������ �� ���������� �����
      security:
        - AdminBasicAuth: []
      parameters:
        - name: file_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ������ ��� ����������.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileDownloadResponse"

  # --- Health Checks ---
  /health:
    get:
      tags:
        - Health Checks
      summary: �������� ��������� �������
      responses:
        "200":
          description: ������ ��������.

components:
  schemas:
    # --- Session Schemas ---
    TelegramSessionRequest:
      type: object
      properties:
        telegram_id:
          type: integer
          description: ���������� ������������� ������������ � Telegram.
      required: [telegram_id]
    SessionResponse:
      type: object
      properties:
        application_uuid:
          type: string
          format: uuid
          description: ���������� UUID ������, ������������ ��� ����� ��� Mini App.

    # --- Application Schemas ---
    ApplicationStatus:
      type: string
      enum: [draft, new, in_progress, completed, rejected]
    ApplicationUpdate:
      type: object
      properties:
        data:
          type: object
          description: JSON-������ � ������������ �������� ������.
          additionalProperties: true
    ApplicationAdminUpdate:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/ApplicationStatus"
        admin_comment:
          type: string
          nullable: true
          description: ���������� ����������� �� ���������� �����.

    ApplicationPublic:
      description: ������ ������, ������� ������������.
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        status:
          $ref: "#/components/schemas/ApplicationStatus"
        data:
          type: object
          description: JSON-������ � �������� �� ������� ������.
          additionalProperties: true
    ApplicationAdmin:
      description: ������ ������ ������, ������� ��������������.
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        status:
          $ref: "#/components/schemas/ApplicationStatus"
        data:
          type: object
          description: JSON-������ � �������� �� ������� ������.
        admin_comment:
          type: string
          nullable: true
        telegram_id:
          type: integer
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        files:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationFileResponse"
    ApplicationStatusResponse:
      description: ����� ������ ��� ������� ������� ������.
      type: object
      properties:
        status:
          $ref: "#/components/schemas/ApplicationStatus"

    # --- Form Schema ---
    FormSchemaUpload:
      type: object
      required: [version, schema_data]
      properties:
        version:
          type: string
        schema_data:
          type: object

    # --- File Schemas ---
    ApplicationFileResponse:
      type: object
      properties:
        file_id:
          type: string
          description: ID ����� �� file-storage-service.
        original_filename:
          type: string
        form_field_id:
          type: string
          description: ID ���� �� JSON-�����, � �������� ��������� ����.
    FileLinkRequest:
      type: object
      properties:
        file_id:
          type: string
        original_filename:
          type: string
        form_field_id:
          type: string
      required: [file_id, original_filename, form_field_id]
    FileUploadResponse:
      type: object
      properties:
        file_id:
          type: string
        filename:
          type: string
        content_type:
          type: string
    FileDownloadResponse:
      type: object
      properties:
        download_url:
          type: string
          format: uri

  securitySchemes:
    AdminBasicAuth:
      type: http
      scheme: basic
      description: |-
        Basic-�������������� ��� ������� � ���������������� ����������.
        �������������� �� ������ Nginx. ������� ������ �������� � `.env`.
